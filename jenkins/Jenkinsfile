podTemplate(label: 'java11pod', containers: [
    containerTemplate(name: 'git', image: 'alpine/git', ttyEnabled: true, command: 'cat'),
    containerTemplate(name: 'maven', image: 'maven:3.6.3-jdk-11', command: 'cat', ttyEnabled: true),
    containerTemplate(name: 'docker', image: 'docker', command: 'cat', ttyEnabled: true)
  ],
  volumes: [
    hostPathVolume(mountPath: '/var/run/docker.sock', hostPath: '/var/run/docker.sock'),
    hostPathVolume(mountPath: '/root/.ssh', hostPath: '/var/git/.ssh'),
    hostPathVolume(mountPath: '/root/.m2', hostPath: '/var/maven/.m2'),
    hostPathVolume(mountPath: '/root/.docker', hostPath: '/var/docker/.docker')
  ]
  ) {
    node('java11pod') {

        stage('Var definition') {
            script {
                gitRepo = 'git@github.com:ideiasinfo/kafkaToElk.git'
                gitFolder = 'kafkaToElk'
                dockerImage = 'ideiasinfo/replicator-server'
            }
        }

        stage('Clone repository') {
            container('git') {
                sh 'whoami'
                sh 'hostname'
                sh 'hostname -i'
                if ( fileExists(gitFolder) ) {
                    dir(gitFolder) {
                        sh 'ls'
                        sh 'git fetch'
                        sh 'git reset --hard'
                        sh 'git checkout main'
                        sh 'git pull'
                    }
                }else{
                    sh 'git clone -b main '+gitRepo
                }
                sh 'chown root:root -R '+gitFolder
                sh 'chmod 777 -R '+gitFolder
                sh 'ls -lh'
            }
        }

        stage('Maven Build') {
            container('maven') {
                sh 'whoami'
                sh 'hostname'
                sh 'hostname -i'
                dir(gitFolder) {
                    sh "mvn clean install"
                    script {
                        pom = readMavenPom(file: 'pom.xml')
                        projectVersion = pom.getVersion()
                    }
                }
            }
        }

        stage('Docker Build') {
            container('maven') {
                sh 'whoami'
                sh 'hostname'
                sh 'hostname -i'
                dir(gitFolder) {
                    sh 'mvn docker:build'
                }
            }
        }

        stage('Docker Login') {
            container('docker') {
                sh 'whoami'
                sh 'hostname'
                sh 'hostname -i'
                sh 'docker login'
            }
        }

        stage('Docker Push') {
            container('docker') {
                sh 'whoami'
                sh 'hostname'
                sh 'hostname -i'
                sh 'docker images'
                sh 'docker push '+dockerImage+':'+projectVersion
                sh 'docker rmi -f '+dockerImage+':'+projectVersion
            }
        }

    }
}