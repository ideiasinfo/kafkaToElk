<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>br.com.replicator</groupId>
        <artifactId>kafkaToElk-pom</artifactId>
        <version>1.1.3</version>
    </parent>

    <name>replicator-server</name>
    <packaging>jar</packaging>
    <artifactId>replicator-server</artifactId>

    <dependencies>
        <dependency>
            <groupId>br.com.replicator</groupId>
            <artifactId>els-integration</artifactId>
        </dependency>
        <dependency>
            <groupId>br.com.replicator</groupId>
            <artifactId>kafka-integration</artifactId>
        </dependency>
        <dependency>
            <groupId>br.com.replicator</groupId>
            <artifactId>stock-replicator</artifactId>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-config</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <dependency>
            <groupId>org.elasticsearch</groupId>
            <artifactId>elasticsearch</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.kafka</groupId>
            <artifactId>spring-kafka</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <executable>true</executable>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <configuration>
                    <showLogs>${docker.logs.show}</showLogs>
                    <verbose>true</verbose>
                    <images>
                        <image>
                            <name>ideiasinfo/replicator-server:${project.version}</name>
                            <alias>${project.artifactId}</alias>
                            <build>
                                <from>openjdk:11.0.6-jre-slim</from>
                                <entryPoint>
                                    <exec>
                                        <arg>java</arg>
                                        <arg>-jar</arg>
                                        <arg>/maven/${project.artifactId}-${project.version}.${project.packaging}</arg>
                                        <arg>--spring.profiles.active=${PROFILE}</arg>
                                        <arg>--spring.cloud.config.uri=${CONFIG_SERVER}</arg>
                                        <arg>--spring.cloud.config.username=${CONFIG_USERNAME}</arg>
                                        <arg>--spring.cloud.config.password=${CONFIG_PASSWORD}</arg>
                                    </exec>
                                </entryPoint>
                                <assembly>
                                    <descriptorRef>artifact</descriptorRef>
                                </assembly>
                            </build>
                            <run>
                                <namingStrategy>alias</namingStrategy>
                                <network>
                                    <mode>custom</mode>
                                    <name>microservices-bridge</name>
                                </network>
                                <env>
                                    <PROFILE>devext</PROFILE>
                                    <CONFIG_SERVER>http://192.168.0.150:8888/config-server</CONFIG_SERVER>
                                    <CONFIG_USERNAME>user</CONFIG_USERNAME>
                                    <CONFIG_PASSWORD></CONFIG_PASSWORD>
                                </env>
                                <ports>
                                    <port>8010:8080</port>
                                </ports>
                            </run>
                        </image>
                    </images>
                </configuration>
            </plugin>

        </plugins>
    </build>

</project>